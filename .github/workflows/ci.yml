name: CI

on:
  push:
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!master'   # excludes master

jobs:
  # Test
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
        poetry-version: [1.7.1]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache poetry installation
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-${{ matrix.python-version }}-${{ matrix.poetry-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          poetry-version: ${{ matrix.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true 
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        if: steps.cache-deps.outputs.cache-hit != 'true'
      - name: Run tests
        run: |
          source .venv/bin/activate
          python3 tools/yaml2data.py 
          poetry build
          poetry run pytest
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: test-results/**/*.xml